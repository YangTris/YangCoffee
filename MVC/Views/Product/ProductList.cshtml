@using MVC.Controllers
@model PaginatedResult<Shared.DTOs.ProductDTO>
@{
    ViewData["Title"] = "AllProducts";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var selectedCategoryIds = ViewData["selectedCategoryIds"] as string[] ?? Array.Empty<string>();
    var allCategories = ViewData["allCategories"] as List<Shared.DTOs.CategoryDTO>;
    var currentSort = (ViewData["sortBy"] ?? "").ToString().ToLower();
}

<div class="container mt-5">
    <h1 style="font-size: 76px; font-weight: 700;">All Specialty Coffee</h1>
    <p style="font-size: 20px;">
        Choose from a wide variety of coffee from the top roasters in the US.
        All our specialty coffee is roasted to order and shipped fresh to your door.
    </p>

    <form id="filterForm" asp-action="ProductList" method="get">
        <!-- Hidden inputs for pagination -->
        <input type="hidden" name="pageNumber" id="pageNumber" value="@Model.PageNumber" />
        <input type="hidden" name="pageSize" value="@Model.PageSize" />

        <div class="row">
            <!-- Filter Sidebar -->
            <div class="col-3">
                <div class="accordion" id="accordionPanelsStayOpenExample">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h2><i class="bi bi-filter"></i> Filters</h2>
                        <input class="btn btn-primary" type="reset" value="Clear" id="resetButton"
                            style="background-color: #F2F2F2; color: #000000; border: none; font-size: 14px; padding: 5px 10px;">
                    </div>

                    <!-- Category Filter -->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                data-bs-target="#categoryFilter" aria-expanded="true" aria-controls="categoryFilter">
                                Category
                            </button>
                        </h2>
                        <div id="categoryFilter" class="accordion-collapse collapse show">
                            <div class="accordion-body">
                                @foreach (var category in allCategories)
                                {
                                    var isChecked = selectedCategoryIds.Contains(category.CategoryId);
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="CategoryId"
                                            id="category_@category.CategoryId" value="@category.CategoryId" @(isChecked ? "checked" : "") />
                                    <label class="form-check-label"
                                        for="category_@category.CategoryId">@category.Name</label>
                                </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Product List Section -->
            <div class="col-9">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h2>All Products (@Model.TotalItems items)</h2>
                    <div>
                        @* <select class="form-select" name="sortBy" id="sortBy">
                            <option value="createddate"
                                selected="@(ViewData["sortBy"]?.ToString() == "createddate" ? "selected" : "")">Newest
                            </option>
                            <option value="price"
                                selected="@(ViewData["sortBy"]?.ToString() == "price" ? "selected" : "")">Price: Low
                                to High</option>
                            <option value="name"
                                selected="@(ViewData["sortBy"]?.ToString() == "name" ? "selected" : "")">Name: A to
                                Z</option>
                        </select> *@
                        <select class="form-select" name="sortBy" id="sortBy">
                            <option value="createddate" selected="@(currentSort == "createddate")">Newest</option>
                            <option value="price" selected="@(currentSort == "price")">Price: Low to High</option>
                            <option value="name" selected="@(currentSort == "name")">Name: A to Z</option>
                        </select>
                    </div>
                </div>

                <!-- Product Grid -->
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var item in Model.Items)
                    {
                        <div class="col">
                            <a asp-action="ProductDetail" asp-controller="Product" asp-route-id="@item.ProductId"
                                class="text-decoration-none text-dark">
                                <div class="card border-0" style="width: 18rem;">
                                    <img src="@item.ProductImages.FirstOrDefault()?.ImageUrl"
                                        style="background-color: rgb(246, 246, 246);" class="card-img-top" alt="...">
                                    <div class="card-body p-0 mt-3">
                                        <div class="d-flex align-items-center justify-content-between">
                                            <h5 class="card-title mb-1 fw-bold">@item.Name</h5>
                                            <h5 class="card-text fw-bold">@item.BasePrice</h5>
                                        </div>
                                        <p class="card-text text-muted mb-2">@item.ProductVariants?.FirstOrDefault()?.Taste
                                        </p>
                                    </div>
                                </div>
                            </a>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                <nav aria-label="Page navigation" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                            <a href="#" class="page-link pagination-link"
                                data-page="@(@Model.PageNumber - 1)">Previous</a>
                        </li>

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a href="#" class="page-link pagination-link" data-page="@i">@i</a>
                            </li>
                        }

                        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                            <a href="#" class="page-link pagination-link" data-page="@(@Model.PageNumber + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Handle Clear button
        document.getElementById('resetButton').addEventListener('click', function (e) {
            e.preventDefault(); // prevent native reset behavior

            // Uncheck all category checkboxes
            document.querySelectorAll('input[name="CategoryId"]').forEach(function (checkbox) {
                checkbox.checked = false;
            });

            // Reset sort and pagination
            document.getElementById('sortBy').value = "";
            document.getElementById('pageNumber').value = 1;

            // Submit form after clearing
            document.getElementById('filterForm').submit();
        });

        // Auto-submit on sort change
        document.getElementById('sortBy').addEventListener('change', function () {
            document.getElementById('pageNumber').value = 1;
            document.getElementById('filterForm').submit();
        });

        // Auto-submit on filter change
        document.querySelectorAll('input[name="CategoryId"]').forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                document.getElementById('pageNumber').value = 1;
                document.getElementById('filterForm').submit();
            });
        });

        // Pagination handler
        document.querySelectorAll('.pagination-link').forEach(function (link) {
            link.addEventListener('click', function (e) {
                e.preventDefault();
                const page = this.getAttribute('data-page');
                document.getElementById('pageNumber').value = page;
                document.getElementById('filterForm').submit();
            });
        });
    </script>
}
