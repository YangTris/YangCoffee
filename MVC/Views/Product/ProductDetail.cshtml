@using Shared.DTOs
@model ProductDTO

@{
    ViewData["Title"] = "ProductDetail";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <form asp-controller="Cart" asp-action="AddToCart" method="post">
        <input type="hidden" asp-for="ProductId" />
        <input type="hidden" name="productVariantId" value="@Model.ProductVariants.FirstOrDefault().ProductVariantId" />
        <div class="row">
            <div class="col">
                <div id="productImagesCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < Model.ProductImages.Count; i++)
                        {
                            var image = Model.ProductImages[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img src="@image.ImageUrl" class="d-block w-100" alt="Product image"
                                    style="background-color: rgb(246, 246, 246);">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#productImagesCarousel"
                        data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#productImagesCarousel"
                        data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>

            </div>
            <div class="col">
                <h1 id="productName" class="">@Model.Name</h1>
                <h3 id="productPrice">$@Model.ProductVariants.FirstOrDefault().Price</h3>
                <h4 id="productTaste">@Model.ProductVariants.FirstOrDefault().Taste</h4>
                <p>@Html.DisplayFor(model => model.Description)</p>
                <label for="inputPassword5" class="form-label">Size</label>
                <select name="productVariantId" class="form-select form-select-lg mb-3"
                    aria-label="Large select example" id="variantSelect" onchange="updateVariant()">
                    @for (var i = 0; i < Model.ProductVariants.Count(); i++)
                    {
                        <option value="@Model.ProductVariants[i].ProductVariantId">@Model.ProductVariants[i].Size</option>
                    }
                </select>
                @if (Model.AverageRating.HasValue)
                {
                    <div class="mb-2">
                        <span class="me-2">Average Rating:</span>
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Math.Floor(Model.AverageRating.Value))
                            {
                                <i class="bi bi-star-fill text-warning"></i>
                            }
                            else if (i - Model.AverageRating.Value < 1)
                            {
                                <i class="bi bi-star-half text-warning"></i>
                            }
                            else
                            {
                                <i class="bi bi-star text-warning"></i>
                            }
                        }
                        <span class="text-muted">(@Model.AverageRating.Value.ToString("0.0"))</span>
                    </div>
                }
                else
                {
                    <p class="text-muted">No ratings yet.</p>
                }


                <div class="mb-3">
                    <label for="inputPassword5" class="form-label">Quantity</label>
                    <div class="input-group" style="width: 120px;">
                        <button class="minus is-form btn btn-outline-secondary" type="button" value="-">-</button>
                        <input asp-for="quantity" aria-label="quantity" class="input-qty" type="text" placeholder="1"
                            max="99" min="1" style=" width: 3rem; text-align: center;" value="1">
                        <button class="plus is-form btn btn-outline-secondary" type="button" value="+">+</button>
                    </div>
                </div>
                <div class="d-grid">
                    <button class="btn btn-danger btn-lg mt-3" type="submit">Add to Cart</button>
                </div>

                <hr class="featurette-divider mt-5 mb-4">

                <div class="accordion" id="accordionPanelsStayOpenExample">
                    <h1 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#panelsStayOpen-collapseTwo" aria-expanded="false"
                            aria-controls="panelsStayOpen-collapseTwo">
                            <h3>Flavor Profile</h3>
                        </button>
                    </h1>

                    <div id="panelsStayOpen-collapseTwo" class="accordion-collapse collapse">
                        <div class="accordion-body">
                            <div>
                                <h4>Roast Level</h4>
                                <p style="font-size: 24px;"><i class="bi bi-fire"></i><span
                                        id="roastLevel">@Model.ProductVariants.FirstOrDefault().RoastType</span></p>
                                <h4>Origin</h4>
                                <p style="font-size: 24px;"><i class="bi bi-globe-americas"></i><span
                                        id="originRegion">@Model.ProductVariants.FirstOrDefault().Region</span></p>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="accordion" id="accordionPanelsStayOpenExample">
                    <h1 class="accordion-header">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                            data-bs-target="#panelsStayOpen-collapseTwo2" aria-expanded="false"
                            aria-controls="panelsStayOpen-collapseTwo2">
                            <h3>Why Yang's Coffee?</h3>
                        </button>
                    </h1>

                    <div id="panelsStayOpen-collapseTwo2" class="accordion-collapse collapse">
                        <div class="accordion-body">
                            <div>
                                <p>We are a small family business that has been roasting coffee for over 20 years. We
                                    take
                                    pride
                                    in our craft and are committed to providing the best quality coffee to our
                                    customers.
                                </p>
                                <p>Our coffee is sourced from the best farms around the world and roasted to perfection
                                    in
                                    small
                                    batches. We believe that great coffee should be accessible to everyone, and we
                                    strive to
                                    make our products affordable without compromising on quality.</p>
                                <p>Thank you for supporting our small business. We hope you enjoy our coffee as much as
                                    we
                                    do!
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="mt-5">
        <h2 class="mb-4">Customer Reviews</h2>

        @if (Model.ProductRatings != null && Model.ProductRatings.Any())
        {
            foreach (var rating in Model.ProductRatings)
            {
                <div class="card mb-3 shadow-sm">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <h5 class="card-title mb-1">@rating.UserName</h5>
                            <div>
                                @for (int i = 1; i <= 5; i++)
                                {
                                    if (i <= rating.Rating)
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-muted"></i>
                                    }
                                }
                            </div>
                        </div>
                        <p class="card-text mt-2">@rating.Comment</p>
                        <p class="text-muted small">Posted on @rating.CreatedDate.ToString("MMM dd, yyyy")</p>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No reviews yet. Be the first to leave one!</p>
        }
    </div>

    <partial name="_ProductRatingForm" model="new Shared.DTOs.ProductRatingDTO { ProductId = Model.ProductId }" />
    <partial name="Index" />
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        const productVariants = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ProductVariants));

        function updateVariant() {
            const selectedId = document.getElementById('variantSelect').value;
            console.log('Selected variant ID:', selectedId);

            const selectedVariant = productVariants.find(variant => variant.ProductVariantId == selectedId);
            console.log('Selected variant object:', selectedVariant);

            if (selectedVariant) {
                document.querySelector('input[name="productVariantId"]').value = selectedVariant.ProductVariantId;
                document.getElementById('productPrice').innerText = "$" + selectedVariant.Price;
                document.getElementById('productTaste').innerText = selectedVariant.Taste;
                document.getElementById('roastLevel').innerText = selectedVariant.RoastType.ToString();
                document.getElementById('originRegion').innerText = selectedVariant.Region.ToString();
            } else {
                console.error('Variant not found for selectedId:', selectedId);
            }
        }

        $('input.input-qty').each(function () {
            var $this = $(this),
                qty = $this.parent().find('.is-form'),
                min = Number($this.attr('min')),
                max = Number($this.attr('max'))
            if (min == 0) {
                var d = 0
            } else d = min
            $(qty).on('click', function () {
                if ($(this).hasClass('minus')) {
                    if (d > min) d += -1
                } else if ($(this).hasClass('plus')) {
                    var x = Number($this.val()) + 1
                    if (x <= max) d += 1
                }
                $this.attr('value', d).val(d)
            })
        })
    </script>
}
